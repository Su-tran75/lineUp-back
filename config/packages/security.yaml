security:
    encoders:
        App\Entity\User:
            algorithm: auto


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:       /api/login
                success_handler:  lexik_jwt_authentication.handler.authentication_success
                failure_handler:  lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/api/restaurants/[0-9]+, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] }       
        - { path: ^/api/restaurants, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [GET] }
        - { path: ^/api/restaurants, roles: [ROLE_ADMIN, ROLE_RESTAURANT], methods: [POST, PUT, PATCH, DELETE] }

        - { path: ^/api/users, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
        - { path: ^/api/users, roles: [ROLE_ADMIN, ROLE_USER, ROLE_RESTAURANT], methods: [GET, PUT, PATCH, DELETE] }

        - { path: ^/api/cuisineTypes, roles: ROLE_ADMIN, methods: [GET, POST, PUT, PATCH, DELETE] }

        - { path: ^/api/tickets/restaurants, roles: [ROLE_RESTAURANT, ROLE_USER, ROLE_ADMIN] methods: [GET] }

        - { path: ^/api/tickets, roles: [ROLE_RESTAURANT, ROLE_USER] methods: [GET, POST, PUT, PATCH] }

        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
